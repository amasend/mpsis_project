library(httr)
library(jsonlite)
flights <- fromJSON("https://api.skypicker.com/flights?flyFrom=PRG&dateFrom=18/11/2018&dateTo=12/12/2018&partner=picky")
data <- flights$data
route <- data$route
#dataset <- data.frame(matrix(ncol = 3, nrow = 0))
dataset <- data.frame(city = character(), lattitude = numeric(), longitude = numeric())
for (i in seq(1,length(route),1)){
dataset <- rbind(dataset, data.frame(city = data$flyTo[[i]],
lattitude = tail(route[[i]]$latTo, 1),
longitude = tail(route[[i]]$lngTo, 1)))
}
x = c(1,2,3,4,5)
x
jitter(x)
library(httr)
library(jsonlite)
flights <- fromJSON("https://api.skypicker.com/flights?flyFrom=PRG&dateFrom=18/11/2018&dateTo=12/12/2018&partner=picky")
data <- flights$data
route <- data$route
#dataset <- data.frame(matrix(ncol = 3, nrow = 0))
dataset <- data.frame(city = character(), lattitude = numeric(), longitude = numeric())
for (i in seq(1,length(route),1)){
dataset <- rbind(dataset, data.frame(city = data$flyTo[[i]],
lattitude = tail(route[[i]]$latTo, 1),
longitude = tail(route[[i]]$lngTo, 1)))
}
write.csv(dataset, file = "/srv/shinyapps/demo/data/flights.csv")
x <- read.csv('srv/shinyapps/demo/data/flights.csv')
View(dataset)
subset(dataset, lattitude >= 15 & lattitude <= 20, longitude >= 15 & longitude <= 20)
s = subset(dataset, lattitude >= 15 & lattitude <= 20, longitude >= 15 & longitude <= 20)
View(s)
dataset <- read.csv("data/flights.csv")
#dataset <- data.frame(matrix(ncol = 3, nrow = 0))
dataset <- data.frame(city = character(), lattitude = numeric(), longitude = numeric())
for (i in seq(1,length(route),1)){
dataset <- rbind(dataset, data.frame(city = data$flyTo[[i]],
lattitude = tail(route[[i]]$latTo, 1),
longitude = tail(route[[i]]$lngTo, 1)))
}
View(s)
dataset[FALSE,]
s <- dataset[FALSE,]
View(s)
allzips <- readRDS("/srv/shinyapps/demo/data/superzip.rds")
allzips$latitude <- jitter(allzips$latitude)
allzips$longitude <- jitter(allzips$longitude)
allzips$college <- allzips$college * 100
allzips$zipcode <- formatC(allzips$zipcode, width=5, format="d", flag="0")
row.names(allzips) <- allzips$zipcode
View(allzips)
#dataset <- data.frame(matrix(ncol = 3, nrow = 0))
dataset <- data.frame(city = character(), latitude = numeric(), longitude = numeric())
for (i in seq(1,length(route),1)){
dataset <- rbind(dataset, data.frame(city = data$flyTo[[i]],
lattitude = tail(route[[i]]$latTo, 1),
longitude = tail(route[[i]]$lngTo, 1)))
}
write.csv(dataset, file = "/srv/shinyapps/demo/data/flights.csv")
View(flights)
#dataset <- data.frame(matrix(ncol = 3, nrow = 0))
dataset <- data.frame(city = character(), latitude = numeric(), longitude = numeric(), price = numeric())
for (i in seq(1,length(route),1)){
dataset <- rbind(dataset, data.frame(city = data$flyTo[[i]],
lattitude = tail(route[[i]]$latTo, 1),
longitude = tail(route[[i]]$lngTo, 1),
price = data$price[[i]]))
}
write.csv(dataset, file = "/srv/shinyapps/demo/data/flights.csv")
View(dataset)
View(dataset)
#dataset <- data.frame(matrix(ncol = 3, nrow = 0))
dataset <- data.frame(city = character(), latitude = numeric(), longitude = numeric(), price = numeric())
for (i in seq(1,length(route),1)){
dataset <- rbind(dataset, data.frame(city = data$flyTo[[i]],
latitude = tail(route[[i]]$latTo, 1),
longitude = tail(route[[i]]$lngTo, 1),
price = data$price[[i]]))
}
write.csv(dataset, file = "/srv/shinyapps/demo/data/flights.csv")
dataset$index
index(dataset)
View(dataset)
row.names(dataset)
View(dataset)
dataset[['price']]
'dasd' + 'dad'
paste('dasa','dasas','dasas')
View(flights)
data <- flights$data
route <- data$route
View(data)
cityFrom <- data.frame(city = data$flyFrom, latitude = route[[1]]$latFrom, longitude = route[[1]]$lngFrom)
View(cityFrom)
cityFrom <- data.frame(city = data$flyFrom[[1]], latitude = route[[1]]$latFrom, longitude = route[[1]]$lngFrom)
View(cityFrom)
write.csv(cityFrom, file = "/srv/shinyapps/demo/data/cityFrom.csv")
cityFrom <- read.csv("data/cityFrom.csv")
cityFrom <- cityFrom
countryCodes <- read.csv("/srv/shinyapps/demo/data/country_codes.csv")
View(countryCodes)
View(flights)
flights$time
View(data)
View(flights)
flu_duration <- data$fly_duration
flu_duration[[1]]
flu_duration[1]
flu_duration[5]
paste('ddd','fff')
paste('ddd','fff','')
paste('ddd','fff', sep='')
strsplit('aa-bb-dfgh', '-')
strsplit('aa-bb-dfgh', '-')[1]
strsplit('aa-bb-dfgh', '-')[[1]]
strsplit('aa-bb-dfgh', '-')
strsplit('aa-bb-dfgh', '-')[[1]][1]
strsplit('aa-bb-dfgh', '-')[[1]][1]
strsplit('aa-bb-dfgh', '-')[[1]][1]
start_date <- strsplit(input$date_from, '-')
paste('dddd')
'dddd'
paste('as.character('dddd')')
paste(as.character('dddd'))
as.character('dddd')
dataset[[1]]
dataset <- data.frame(city = character(), latitude = numeric(), longitude = numeric(), price = numeric())
for (i in seq(1,length(route),1)){
dataset <- rbind(dataset, data.frame(city = data$flyTo[[i]],
latitude = tail(route[[i]]$latTo, 1),
longitude = tail(route[[i]]$lngTo, 1),
price = data$price[[i]]))
}
dataset[[1]]
View(dataset)
dataset[1]
dataset[1,]
View(dataset)
colnames(dataset)
View(dataset)
View(dataset)
View(dataset)
View(data)
data$cityTo[1]
data$cityTo[5]
data$cityTo[7]
data <- flights$data
route <- data$route
dataset <- data.frame(city = character(), latitude = numeric(), longitude = numeric(), price = numeric())
for (i in seq(1,length(route),1)){
dataset <- rbind(dataset, data.frame(city = data$cityTo[[i]],
latitude = tail(route[[i]]$latTo, 1),
longitude = tail(route[[i]]$lngTo, 1),
price = data$price[[i]]))
}
View(dataset)
write.csv(dataset, file = "/srv/shinyapps/demo/data/flights.csv")
cityFrom <- data.frame(city = data$cityFrom[[1]], latitude = route[[1]]$latFrom, longitude = route[[1]]$lngFrom)
View(cityFrom)
write.csv(cityFrom, file = "/srv/shinyapps/demo/data/cityFrom.csv")
shiny::runApp('Documents/mpsis_project/demo')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='amasend',
token='6B2EC59636E46EF875996FEF4E263AB0',
secret='wJm62V1JYPKQTwjV4Y8zOwh8cAWCDClyRxJu6Sxv')
install.packages("RColorBrewer")
install.packages("colorspace")
install.packages("crosstalk")
install.packages("ggplot2")
install.packages("gridExtra")
install.packages("gtable")
install.packages("htmlwidgets")
install.packages("labeling")
install.packages("lazyeval")
install.packages("leaflet")
install.packages("scales")
install.packages("lattice")
install.packages("jsonlite")
install.packages("jsonlite")
shiny::runApp('Documents/mpsis_project/demo')
